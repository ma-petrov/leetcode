class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        # Количесство вариантов путей до клеток в первой строке и первой
        # колонке всегда будет равно 1. Количество вариантов путей до клетки
        # [i, j] это сумма кол-ва вариантов до клеток [i - 1, j] и [i, j - 1], 
        # потому что в клетку [i, j] можно прийти только из этих двух клеток.
        #
        #      0     1     2     3     4
        # --------------------------------
        # 0 |  1     1     1     1     1
        # 1 |  1     2     3     4     5
        # 2 |  1     3     6    10    15
        #
        # Для решения достаточно запоминать последнюю строку, что сделано в
        # перменной paths

        paths = [1] * n

        # Первая строка уже заполнена "1", поэтому общее кол-во строк, по
        # которым нужно пройти, равно m - 1.
        for _ in range(m - 1):

            # Первый столбец всегда равен 1, поэтому общее кол-во столбцов, по
            # которым нужно пройти, равно n - 1.
            for i in range(1, n):

                # Каждый раз paths перезаписывается, поэтому клетка [i, j - 1], 
                # это та же клетка, что и [i, j], только в предыдущей версии.
                paths[i] += paths[i - 1]
        
        return paths[-1]
